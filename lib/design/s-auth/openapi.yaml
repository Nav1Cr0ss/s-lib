openapi: 3.0.3
info:
  title: s-auth
  description: initial
  version: 0.0.1
servers:
  - url: 'http://localhost:1232'
tags:
  - name: auth
    description: Authentication
paths:
  /login:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - auth
      summary: authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Token Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'






#
#  /docs:
#    get:
#      tags:
#        - docs
#      summary: documentations
#      operationId: GetDocs
#      responses:
#        '200':
#          description: Successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AccountResponse'
#  /tokens/renew_access:
#    post:
#      tags:
#        - account
#      summary: renew token
#      operationId: RenewToken
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/tokenRenewRequest'
#      responses:
#        '200':
#          description: Successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/tokenRenewResponse'
#        '400':
#          description: Validation Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponse'
#  /accounts/login:
#    post:
#      tags:
#        - account
#      summary: login account
#      operationId: LoginAccount
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AccountLogin'
#      responses:
#        '200':
#          description: Successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/TokenResponse'
#        '400':
#          description: Validation Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponse'
#  /accounts:
#    post:
#      tags:
#        - account
#      summary: register a new account
#      operationId: CreateAccount
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AccountRequest'
#      responses:
#        '200':
#          description: Successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AccountResponse'
#        '400':
#          description: Validation Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponse'
#  '/accounts/{id}':
#    get:
#      security:
#        - bearerAuth: [ ]
#      tags:
#        - account
#      summary: get account by ID
#      operationId: GetAccount
#      parameters:
#        - $ref: '#/components/parameters/id'
#      responses:
#        '200':
#          description: successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AccountResponse'
#        '400':
#          description: successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponse'
#  /categories:
#    get:
#      tags:
#        - service
#      summary: list of categories
#      operationId: CategoriesList
#      responses:
#        '200':
#          description: Successful operation
#          content:
#            application/json:
#              schema:
#                type: array
#                items:
#                  $ref: '#/components/schemas/CategoryResponse'
#        '400':
#          description: Validation Error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponse'
components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    Login:
      type: object
      required:
        - login
        - password
      properties:
        login:
          x-oapi-codegen-extra-tags:
            validate: required
          type: string
        password:
          x-oapi-codegen-extra-tags:
            validate: required
          type: string

    Token:
      required:
        - access_token
        - access_token_expires_at
        - refresh_token
      type: object
      properties:
        access_token:
          type: string
        access_token_expires_at:
          type: string
          format: date-time
        refresh_token:
          type: string

  #    tokenRenewResponse:
  #      type: object
  #      properties:
  #        access_token:
  #          type: string
  #        access_token_expires_at:
  #          type: string
  #          format: date-time
  #    tokenRenewRequest:
  #      type: object
  #      properties:
  #        refresh_token:
  #          type: string
  #    AccountResponse:
  #      type: object
  #      properties:
  #        id:
  #          type: integer
  #          format: int64
  #        phone:
  #          type: string
  #        created_at:
  #          type: string
  #          format: date-time
  #    AccountRequest:
  #      required:
  #        - phone
  #        - password
  #      type: object
  #      properties:
  #        phone:
  #          x-oapi-codegen-extra-tags:
  #            validate: required
  #          type: string
  #        password:
  #          x-oapi-codegen-extra-tags:
  #            validate: required
  #          type: string
  #    AccountLogin:
  #      required:
  #        - phone
  #        - password
  #      type: object
  #      properties:
  #        phone:
  #          x-oapi-codegen-extra-tags:
  #            validate: required
  #          type: string
  #        password:
  #          x-oapi-codegen-extra-tags:
  #            validate: required
  #          type: string
  #    TokenResponse:
  #      type: object
  #      properties:
  #        session_id:
  #          type: string
  #          format: uuid
  #        access_token:
  #          type: string
  #        access_token_expires_at:
  #          type: string
  #          format: date-time
  #        refresh_token:
  #          type: string
  #        refresh_token_expires_at:
  #          type: string
  #          format: date-time
  #    CategoryResponse:
  #      type: object
  #      properties:
  #        title:
  #          type: string
  #    ErrorResponse:
  #      type: object
  #      properties:
  #        message:
  #          type: string



  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT




#  responses:
#    LoginResp:
#      description: Token Response
#      content:
#        application/json:
#          schema:
#            $ref: '#/components/schemas/Token'
#
#
#
#  requestBodies:
#    LoginReq:
#      content:
#        application/json:
#          schema:
#            $ref: '#/components/schemas/Login'
